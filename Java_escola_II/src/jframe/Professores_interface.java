/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jframe;

import java_escola_ii.DAO.ProfessoresDAO;
import java_escola_ii.beans.Professores;
import javax.swing.JOptionPane;

/**
 *
 * @author Otávio Baggio
 */
public class Professores_interface extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Professores_interface.class.getName());

    /**
     * Creates new form Professores_interface
     */
    public Professores_interface() {
        initComponents();
    }
    
    private void limparFormulario(){
        txt_idProfessor.setText("");
        txt_idProf.setText("");
        txt_nomeProf.setText("");
        txt_idadeProf.setText("");
        cmb_Disciplina.setSelectedIndex(-1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_idAluno = new javax.swing.JTextField();
        txt_id = new javax.swing.JTextField();
        txt_nome = new javax.swing.JTextField();
        txt_idade = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cmb_curso = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        btn_consultar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btn_excluir = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btn_atualizar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_idProfessor = new javax.swing.JTextField();
        txt_idProf = new javax.swing.JTextField();
        txt_nomeProf = new javax.swing.JTextField();
        txt_idadeProf = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cmb_Disciplina = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        btn_consultarProf = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btn_excluirProf = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        btn_atualizarProf = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        txt_idAluno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idAlunoActionPerformed(evt);
            }
        });

        txt_id.setEditable(false);

        jLabel1.setText("ID:");

        cmb_curso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Matematica", "Historia", "Ciência da Computacao", "Biologia", "Economia" }));

        jLabel2.setText("ID:");

        btn_consultar.setText("CONSULTAR");
        btn_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Editar e Excluir Aluno");

        btn_excluir.setText("EXCLUIR");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });

        jLabel4.setText("Nome:");

        btn_atualizar.setText("ATUALIZAR");
        btn_atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atualizarActionPerformed(evt);
            }
        });

        jLabel5.setText("Idade:");

        jLabel6.setText("Curso:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_idProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idProfessorActionPerformed(evt);
            }
        });

        txt_idProf.setEditable(false);

        jLabel7.setText("ID:");

        cmb_Disciplina.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Estrutura de Dados", "Sistemas Operacionais", "IA e Nanociencias" }));

        jLabel8.setText("ID:");

        btn_consultarProf.setText("CONSULTAR");
        btn_consultarProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultarProfActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setText("Editar e Excluir Professor");

        btn_excluirProf.setText("EXCLUIR");
        btn_excluirProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirProfActionPerformed(evt);
            }
        });

        jLabel10.setText("Nome:");

        btn_atualizarProf.setText("ATUALIZAR");
        btn_atualizarProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_atualizarProfActionPerformed(evt);
            }
        });

        jLabel11.setText("Idade:");

        jLabel12.setText("Disciplina:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_Disciplina, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(txt_idProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(txt_idadeProf, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(27, 27, 27)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txt_idProf, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txt_nomeProf, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btn_excluirProf)
                                    .addGap(65, 65, 65))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_atualizarProf)
                            .addComponent(btn_consultarProf))
                        .addGap(175, 175, 175))))
            .addGroup(layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(jLabel9)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txt_idProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_idProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(btn_consultarProf))
                        .addGap(49, 49, 49)))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txt_nomeProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txt_idadeProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cmb_Disciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_excluirProf)
                    .addComponent(btn_atualizarProf))
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_idAlunoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idAlunoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idAlunoActionPerformed

    private void btn_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultarActionPerformed
        int idProfessor = Integer.parseInt(txt_idProfessor.getText());
        ProfessoresDAO pDAO = new ProfessoresDAO();

        Professores p = pDAO.getProfessores(idProfessor);
        if(p == null){
            limparFormulario();
            JOptionPane.showMessageDialog(this, "Professores não encontrado!");
        }
        else{
            txt_idProfessor.setText(String.valueOf(p.getId()));
            txt_nomeProf.setText(p.getNome());
            txt_idadeProf.setText(String.valueOf(p.getIdade()));
            cmb_Disciplina.setSelectedItem(p.getDisciplina());

            JOptionPane.showMessageDialog(this, "Professor encontrado com sucesso!", "Consulta OK", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btn_consultarActionPerformed

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir?", "Exclusão", JOptionPane.YES_NO_OPTION);

        if(resposta == JOptionPane.YES_OPTION){
            ProfessoresDAO pDAO = new ProfessoresDAO();
            pDAO.excluir(Integer.parseInt(txt_idProfessor.getText()));
            limparFormulario();

            JOptionPane.showMessageDialog(this, "Professor excluido com sucesso!", "Exclusao OK", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btn_excluirActionPerformed

    private void btn_atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_atualizarActionPerformed
        if (txt_idProfessor.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "Digite o ID do aluno que deseja atualizar!",
                "Aviso",
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (txt_nomeProf.getText().isEmpty() || txt_idadeProf.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "Preencha todos os campos antes de atualizar!",
                "Aviso",
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            Professores p = new Professores();
            p.setId(Integer.parseInt(txt_idProfessor.getText())); // ID digitado
            p.setNome(txt_nomeProf.getText());
            p.setIdade(Integer.parseInt(txt_idadeProf.getText())); // idade digitada
            p.setDisciplina(cmb_Disciplina.getSelectedItem().toString());

            ProfessoresDAO pDAO = new ProfessoresDAO();
            pDAO.editar(p);

            JOptionPane.showMessageDialog(this,
                "Aluno atualizado com sucesso!",
                "Atualização OK",
                JOptionPane.INFORMATION_MESSAGE);

            limparFormulario();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this,
                "Idade deve ser um número válido.",
                "Erro",
                JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Erro ao atualizar aluno: " + e.getMessage(),
                "Erro",
                JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btn_atualizarActionPerformed

    private void txt_idProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idProfessorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idProfessorActionPerformed

    private void btn_consultarProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultarProfActionPerformed
        int idProfessor = Integer.parseInt(txt_idProfessor.getText());
        ProfessoresDAO pDAO = new ProfessoresDAO();

        Professores p = pDAO.getProfessores(idProfessor);
        if(p == null){
            limparFormulario();
            JOptionPane.showMessageDialog(this, "Professor não encontrado!");
        }
        else{
            txt_idProfessor.setText(String.valueOf(p.getId()));
            txt_nomeProf.setText(p.getNome());
            txt_idadeProf.setText(String.valueOf(p.getIdade()));
            cmb_Disciplina.setSelectedItem(p.getDisciplina());

            JOptionPane.showMessageDialog(this, "Professor encontrado com sucesso!", "Consulta OK", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btn_consultarProfActionPerformed

    private void btn_excluirProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirProfActionPerformed
        int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir?", "Exclusão", JOptionPane.YES_NO_OPTION);

        if(resposta == JOptionPane.YES_OPTION){
            ProfessoresDAO pDAO = new ProfessoresDAO();
            pDAO.excluir(Integer.parseInt(txt_idProf.getText()));
            limparFormulario();

            JOptionPane.showMessageDialog(this, "Professor excluido com sucesso!", "Exclusao OK", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btn_excluirProfActionPerformed

    private void btn_atualizarProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_atualizarProfActionPerformed
        if (txt_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "Digite o ID do aluno que deseja atualizar!",
                "Aviso",
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (txt_nome.getText().isEmpty() || txt_idade.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                "Preencha todos os campos antes de atualizar!",
                "Aviso",
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            Professores p = new Professores();
            p.setId(Integer.parseInt(txt_idProf.getText())); // ID digitado
            p.setNome(txt_nomeProf.getText());
            p.setIdade(Integer.parseInt(txt_idadeProf.getText())); // idade digitada
            p.setDisciplina(cmb_Disciplina.getSelectedItem().toString());

            ProfessoresDAO pDAO = new ProfessoresDAO();
            pDAO.editar(p);

            JOptionPane.showMessageDialog(this,
                "Professor atualizado com sucesso!",
                "Atualização OK",
                JOptionPane.INFORMATION_MESSAGE);

            limparFormulario();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this,
                "Idade deve ser um número válido.",
                "Erro",
                JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Erro ao atualizar Professor: " + e.getMessage(),
                "Erro",
                JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btn_atualizarProfActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Professores_interface().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_atualizar;
    private javax.swing.JButton btn_atualizarProf;
    private javax.swing.JButton btn_consultar;
    private javax.swing.JButton btn_consultarProf;
    private javax.swing.JButton btn_excluir;
    private javax.swing.JButton btn_excluirProf;
    private javax.swing.JComboBox<String> cmb_Disciplina;
    private javax.swing.JComboBox<String> cmb_curso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_idAluno;
    private javax.swing.JTextField txt_idProf;
    private javax.swing.JTextField txt_idProfessor;
    private javax.swing.JTextField txt_idade;
    private javax.swing.JTextField txt_idadeProf;
    private javax.swing.JTextField txt_nome;
    private javax.swing.JTextField txt_nomeProf;
    // End of variables declaration//GEN-END:variables
}
